podTemplate(
    label: 'agent-timeoffapp-dev-publish',
	inheritFrom: 'base-pod-template',
	envVars: [
      podEnvVar(key: 'DOCKER_IMAGE_NAME', value: 'hanji96/timeoff-app-dev'),
	  podEnvVar(key: 'DOCKERFILE_DIR', value: 'Dockerfile'),
	  podEnvVar(key: 'IMAGE_TAG', value: "1.0.${BUILD_NUMBER}")
    ],
    containers: [
		containerTemplate(
			name: 'jnlp',
			image: 'jenkins/inbound-agent:alpine-jdk17',
			ttyEnabled: true,
		)
        containerTemplate(
		  name: 'kaniko',
		  image: 'gcr.io/kaniko-project/executor:debug',
		  command: '/busybox/cat',
		  ttyEnabled: true
		)
    ],
	volumes: [
		secretVolume(
		  secretName: 'secret-dockerhub', 
		  mountPath: '/kaniko/.docker',
		)
    ]
)
{
	node('agent-timeoffapp-dev-publish'){
	
		stage('Checkout') {
			container('jnlp') {
			
				echo "Checkout Repo"
				
				checkout([
					$class: 'GitSCM',
					branches: [[name: 'origin/main']],
					userRemoteConfigs: [[
						url: 'https://github.com/HansJP96/Sofka-DevOps-Test.git',
						credentialsId: 'GitHub_Autenticacion_SSH'
					]],
					extensions: [
						[$class: 'WipeWorkspace'],
						[$class: 'GitSCMStatusChecksExtension', name: 'ci/jenkins-Publish', skip: false, unstableBuildNeutral: false, suppressLogs: false, skipProgressUpdates: false]
					]
				])
			}
		}
		
		stage('Build with Kaniko') {
			container('kaniko') {
				
				echo "Build Image and Push to DockerHub.io"
				
				sh '''#!/busybox/sh
					/kaniko/executor --dockerfile `pwd`/${DOCKERFILE_DIR} --context `pwd` --verbosity debug \
					--destination ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} --destination ${DOCKER_IMAGE_NAME}:latest
				'''
			}
		}
	}
}
